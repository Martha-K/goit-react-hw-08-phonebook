{"version":3,"file":"static/js/572.7a77f675.chunk.js","mappings":"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","sources":["components/ContactElement/stalyes.js","components/ContactElement/ContactElement.jsx","components/ContactList/ContactList.jsx","../node_modules/nanoid/index.browser.js","components/ContactForm/styles.js","components/ContactForm/ContactForm.jsx","components/Filter/styles.js","components/Filter/Filter.jsx","pages/Contacts/contactsStyled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Line = styled.li`\n  width: 365px;\n  padding: 7px;\n  display: flex;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const Btn = styled.button`\nmargin-left: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Line, Btn } from './stalyes';\n\nexport const ContactElement = ({ el, id, onClick }) => {\n  return (\n    <Line key={id}>\n      {el.name}: {el.number}\n      <Btn name={el.name} onClick={onClick} id={el.id}>\n        Delete\n      </Btn>\n    </Line>\n  );\n};\n\nContactElement.propTypes = {\n  el: PropTypes.object.isRequired,\n  id: PropTypes.string,\n  onClick: PropTypes.func.isRequired\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { ContactElement } from '../ContactElement/ContactElement';\nimport { deleteContact } from 'redux/contacts/contactOperation';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filterContacts = useSelector(state => state.contacts.contacts);\n  const filter = useSelector(state => state.contacts.filter.value);\n\n  const filteredElement = () => {\n    const normalizedFilter = filter?.toLowerCase();\n    return filter\n      ? filterContacts.filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n      : filterContacts;\n  };\n\n  const contacts = filteredElement();\n\n  const removeContact = el => {\n    dispatch(deleteContact(el.id));\n  };\n  return (\n    <ol>\n      {contacts?.map(el => {\n        return (\n          <ContactElement\n            onClick={() => removeContact(el)}\n            key={el.id}\n            el={el}\n          />\n        );\n      })}\n    </ol>\n  );\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from \"styled-components\"\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 460px;\nborder: 2px solid grey;\npadding: 20px 0;\nborder-radius: 20px;\nalign-items: center;\nmargin-bottom: 50px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 30px;\n  margin-bottom: 10px;\n  width: 250px;\n  `;\n\nexport const Button = styled.button`\nbackground-color: aqua;\nborder-radius: 20px;\nwidth: 100px;\n`\n","import { nanoid } from 'nanoid';\nimport { Form, Label, Button } from './styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperation';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const filterContacts = useSelector(state => state.contacts.contacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    for (const el of filterContacts) {\n      if (el.name === e.currentTarget.elements.name.value) {\n        e.currentTarget.reset();\n        return alert(`${el.name} is already in contacts.`);\n      }\n    }\n    dispatch(\n      addContact({\n        name: e.currentTarget.elements.name.value,\n        number: e.currentTarget.elements.number.value,\n        id: nanoid(),\n      })\n    );\n    e.currentTarget.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 30px;\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  height: 25px;\n  margin-top: 15px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Label, Input } from './styles';\nimport { addFilter } from '../../redux/contacts/contactSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n\n  const changeFilter = e => {\n    setValue(e.target.value);\n    dispatch(\n      addFilter({\n        value: e.target.value,\n      })\n    );\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={value} onChange={changeFilter} />\n    </Label>\n  );\n};\n","\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  /* background-color: aqua; */\n  min-height: 70vh;\n  text-align: center;\n  padding: 20px;\n  `","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { fetchContacts } from '../../redux/contacts/contactOperation';\nimport { Container } from './contactsStyled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state?.contacts?.isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\nconsole.log('gvvhjb', isLoading);\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Container>\n        <ContactForm />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Filter />\n        <ContactList />\n      </Container>\n    </>\n  );\n}\n"],"names":["Line","styled","Btn","ContactElement","el","id","onClick","name","number","ContactList","dispatch","useDispatch","filterContacts","useSelector","state","contacts","filter","value","normalizedFilter","toLowerCase","contact","includes","filteredElement","map","deleteContact","removeContact","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Form","Label","Button","ContactForm","onSubmit","e","preventDefault","currentTarget","elements","reset","alert","addContact","type","pattern","title","required","Input","Filter","useState","setValue","onChange","target","addFilter","Container","Contacts","isLoading","useEffect","fetchContacts","console","log","Helmet"],"sourceRoot":""}